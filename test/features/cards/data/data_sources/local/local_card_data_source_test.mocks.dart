// Mocks generated by Mockito 5.4.4 from annotations
// in sentinal/test/features/cards/data/data_sources/local/local_card_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i7;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/types/mapping.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sentinal/app/database/tables/cards_table.dart' as _i6;
import 'package:sentinal/features/cards/data/data_sources/local/local_card_data_source.dart'
    as _i3;
import 'package:sentinal/features/cards/data/models/card_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeColumn_0<T extends Object> extends _i1.SmartFake
    implements _i2.Column<T> {
  _FakeColumn_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColumnBuilder_1<T extends Object> extends _i1.SmartFake
    implements _i2.ColumnBuilder<T> {
  _FakeColumnBuilder_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalCardDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalCardDataSource extends _i1.Mock
    implements _i3.LocalCardDataSource {
  MockLocalCardDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> insertCard(_i5.CardModel? cardModel) => (super.noSuchMethod(
        Invocation.method(
          #insertCard,
          [cardModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.CardModel>> fetchAllCards() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllCards,
          [],
        ),
        returnValue: _i4.Future<List<_i5.CardModel>>.value(<_i5.CardModel>[]),
      ) as _i4.Future<List<_i5.CardModel>>);

  @override
  _i4.Future<void> deleteCard(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCard,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateCard(_i5.CardModel? cardModel) => (super.noSuchMethod(
        Invocation.method(
          #updateCard,
          [cardModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [Cards].
///
/// See the documentation for Mockito's code generation for more information.
class MockCards extends _i1.Mock implements _i6.Cards {
  MockCards() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Column<String> get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _FakeColumn_0<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as _i2.Column<String>);

  @override
  _i2.Column<String> get cardNumber => (super.noSuchMethod(
        Invocation.getter(#cardNumber),
        returnValue: _FakeColumn_0<String>(
          this,
          Invocation.getter(#cardNumber),
        ),
      ) as _i2.Column<String>);

  @override
  _i2.Column<String> get cardType => (super.noSuchMethod(
        Invocation.getter(#cardType),
        returnValue: _FakeColumn_0<String>(
          this,
          Invocation.getter(#cardType),
        ),
      ) as _i2.Column<String>);

  @override
  _i2.Column<String> get expirationDate => (super.noSuchMethod(
        Invocation.getter(#expirationDate),
        returnValue: _FakeColumn_0<String>(
          this,
          Invocation.getter(#expirationDate),
        ),
      ) as _i2.Column<String>);

  @override
  _i2.Column<String> get assetPath => (super.noSuchMethod(
        Invocation.getter(#assetPath),
        returnValue: _FakeColumn_0<String>(
          this,
          Invocation.getter(#assetPath),
        ),
      ) as _i2.Column<String>);

  @override
  Set<_i2.Column<Object>> get primaryKey => (super.noSuchMethod(
        Invocation.getter(#primaryKey),
        returnValue: <_i2.Column<Object>>{},
      ) as Set<_i2.Column<Object>>);

  @override
  bool get withoutRowId => (super.noSuchMethod(
        Invocation.getter(#withoutRowId),
        returnValue: false,
      ) as bool);

  @override
  bool get dontWriteConstraints => (super.noSuchMethod(
        Invocation.getter(#dontWriteConstraints),
        returnValue: false,
      ) as bool);

  @override
  bool get isStrict => (super.noSuchMethod(
        Invocation.getter(#isStrict),
        returnValue: false,
      ) as bool);

  @override
  List<String> get customConstraints => (super.noSuchMethod(
        Invocation.getter(#customConstraints),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i2.ColumnBuilder<int> integer() => (super.noSuchMethod(
        Invocation.method(
          #integer,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<int>(
          this,
          Invocation.method(
            #integer,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<int>);

  @override
  _i2.ColumnBuilder<BigInt> int64() => (super.noSuchMethod(
        Invocation.method(
          #int64,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<BigInt>(
          this,
          Invocation.method(
            #int64,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<BigInt>);

  @override
  _i2.ColumnBuilder<int> intEnum<T extends Enum>() => (super.noSuchMethod(
        Invocation.method(
          #intEnum,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<int>(
          this,
          Invocation.method(
            #intEnum,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<int>);

  @override
  _i2.ColumnBuilder<String> text() => (super.noSuchMethod(
        Invocation.method(
          #text,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<String>(
          this,
          Invocation.method(
            #text,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<String>);

  @override
  _i2.ColumnBuilder<String> textEnum<T extends Enum>() => (super.noSuchMethod(
        Invocation.method(
          #textEnum,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<String>(
          this,
          Invocation.method(
            #textEnum,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<String>);

  @override
  _i2.ColumnBuilder<bool> boolean() => (super.noSuchMethod(
        Invocation.method(
          #boolean,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<bool>(
          this,
          Invocation.method(
            #boolean,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<bool>);

  @override
  _i2.ColumnBuilder<DateTime> dateTime() => (super.noSuchMethod(
        Invocation.method(
          #dateTime,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<DateTime>(
          this,
          Invocation.method(
            #dateTime,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<DateTime>);

  @override
  _i2.ColumnBuilder<_i7.Uint8List> blob() => (super.noSuchMethod(
        Invocation.method(
          #blob,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<_i7.Uint8List>(
          this,
          Invocation.method(
            #blob,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<_i7.Uint8List>);

  @override
  _i2.ColumnBuilder<double> real() => (super.noSuchMethod(
        Invocation.method(
          #real,
          [],
        ),
        returnValue: _FakeColumnBuilder_1<double>(
          this,
          Invocation.method(
            #real,
            [],
          ),
        ),
      ) as _i2.ColumnBuilder<double>);

  @override
  _i2.ColumnBuilder<T> customType<T extends Object>(
          _i8.UserDefinedSqlType<T>? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #customType,
          [type],
        ),
        returnValue: _FakeColumnBuilder_1<T>(
          this,
          Invocation.method(
            #customType,
            [type],
          ),
        ),
      ) as _i2.ColumnBuilder<T>);
}
